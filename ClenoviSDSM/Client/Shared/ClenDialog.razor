@using ClenoviSDSM.Shared.Models

@inject ISnackbar Snackbar
@inject HttpClient Http

@if (rabStatusi == null || stepeniObrazovanie == null)
{
    @*<MudProgressCircular Color="Color.Primary" Indeterminate="true" />*@
    <MudOverlay Visible="true" DarkBackground="true" Absolute="true">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    </MudOverlay>
}
else
{
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@TitleIcon" Class="mr-3 mb-n1" />
                @TitleText
            </MudText>
        </TitleContent>
        <DialogContent>
            <EditForm Model="@clen" OnValidSubmit="ValidSubmit">
                <DataAnnotationsValidator />
                <MudGrid>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.Ime" Label="Име" For="@(() => clen.Ime)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.Prezime" Label="Презиме" For="@(() => clen.Prezime)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.EMBG" Label="ЕМБГ" For="@(() => clen.EMBG)" Variant="Variant.Outlined" Immediate="true" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.BrClenskaKarta" Label="Бр. на членска карта" For="@(() => clen.BrClenskaKarta)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudDatePicker Editable="true" @bind-Date="@clen.DataRagjanje" Label="Датум на раѓање" AllowKeyboardInput="true" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.Telefon1" Label="Телефон 1" For="@(() => clen.Telefon1)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.Telefon2" Label="Телефон 2" For="@(() => clen.Telefon2)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.Email" Label="e-Mail" For="@(() => clen.Email)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>

                    <MudItem xs="12" sm="6" lg="4">
                        <MudSelect T="int?" @bind-Value="@clen.StepenObrId" Variant="Variant.Outlined" Label="Степен на образование" ReadOnly="@IsReadOnly">
                            @foreach (var so in stepeniObrazovanie)
                            {
                                <MudSelectItem Value="@so.Id">@so.StepenObrOpis</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="@clen.ObrazovnaInstitucija" Label="Образовна институција" For="@(() => clen.ObrazovnaInstitucija)" Variant="Variant.Outlined" Lines="3" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="@clen.ObrNasoka" Label="Насока" For="@(() => clen.ObrNasoka)" Variant="Variant.Outlined" Lines="3" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudSelect T="int?" @bind-Value="@clen.RabotenStatusId" Variant="Variant.Outlined" Label="Работен статус" ReadOnly="@IsReadOnly">
                            @foreach (var rs in rabStatusi)
                            {
                                <MudSelectItem Value="@rs.Id">@rs.OpisStatus</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="8">
                        <MudTextField @bind-Value="@clen.Adresa" Label="Адреса" For="@(() => clen.Adresa)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="@clen.RabotenStatusOpis" Label="Работодавач" For="@(() => clen.RabotenStatusOpis)" Variant="Variant.Outlined" Lines=3 ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="@clen.Hobi" Label="Хоби и интереси" For="@(() => clen.Hobi)" Variant="Variant.Outlined" Lines="3" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.IzbirackoMesto" Label="Избирачко место" For="@(() => clen.IzbirackoMesto)" Variant="Variant.Outlined" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudAutocomplete T="string" Label="Општина" @bind-Value="@clen.IzbOpstina" ReadOnly="@IsReadOnly" ResetValueOnEmptyText="true" CoerceText="true" SearchFunc="@SearchOpstini" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.FbAccount" Label="Facebook сметка" For="@(() => clen.FbAccount)" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Custom.Brands.Facebook" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.TwitterAccount" Label="Twitter сметка" For="@(() => clen.TwitterAccount)" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Custom.Brands.Twitter" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.InstagramAccount" Label="Instagram сметка" For="@(() => clen.InstagramAccount)" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Custom.Brands.Instagram" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" sm="6" lg="4">
                        <MudTextField @bind-Value="@clen.LinkedInAccount" Label="LinkedIn сметка" For="@(() => clen.LinkedInAccount)" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Custom.Brands.LinkedIn" ReadOnly="@IsReadOnly" />
                    </MudItem>
                    <MudItem xs="12" Class="d-inline-flex justify-end">
                        <MudButton OnClick="Cancel">@CancelButtonText</MudButton>
                        <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit" Disabled="@IsReadOnly">@OKButtonText</MudButton>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </DialogContent>
    </MudDialog>
}

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string TitleIcon { get; set; }
    [Parameter] public string TitleText { get; set; }
    [Parameter] public string CancelButtonText { get; set; }
    [Parameter] public string OKButtonText { get; set; }
    [Parameter] public string InsertUpdate { get; set; }
    [Parameter] public bool IsReadOnly { get; set; }


    [Parameter] public Clen clen { get; set; }

    [Parameter] public IEnumerable<RabotenStatus> rabStatusi { get; set; }
    [Parameter] public IEnumerable<StepenObrazovanie> stepeniObrazovanie { get; set; }
    [Parameter] public IEnumerable<string> opstini { get; set; }


    void Cancel()
    {
        MudDialog.Cancel();
    }

    async Task ValidSubmit(EditContext editContext)
    {
        if (InsertUpdate == "insert")
        {
            await Http.PostAsJsonAsync("api/InsertClen", clen);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            await Http.PostAsJsonAsync("api/UpdateClen", clen);
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    private async Task<IEnumerable<string>> SearchOpstini(string value)
    {
        if (string.IsNullOrEmpty(value))
            return opstini;
        return opstini.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

}